def includeCrashlytics() {
    return (project.hasProperty("crashlyticsdemoApisecret")  && project.hasProperty("crashlyticsdemoApikey"))
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
if (includeCrashlytics()) {
    apply plugin: 'io.fabric'
}

repositories {
    maven {url "http://levelupstudio.com/maven2"}
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.0 rc2"

    defaultConfig {
        applicationId "com.levelup.palabre.inoreaderforpalabre"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 2
        versionName "0.0.2"
    }
    buildTypes {
        debug {
            // disable crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // enable crashlytics
            if (includeCrashlytics()) {
                buildConfigField "boolean", "USE_CRASHLYTICS", "true"
                ext.enableCrashlytics = true
            } else {
                buildConfigField "boolean", "USE_CRASHLYTICS", "false"
                ext.enableCrashlytics = false

            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.android.support:recyclerview-v7:22.2.0'

    compile 'com.levelup.palabre.api:palabre-api:0.1.12'

    compile 'com.jakewharton:butterknife:6.1.0'

    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
//    compile 'org.scribe:scribe:1.3.6'
    compile 'oauth.signpost:signpost-core:1.2.1.2'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.3.0'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.okio:okio:1.3.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'org.jsoup:jsoup:1.8.2'

    compile 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
        transitive = true;
    }


}

afterEvaluate {
    if (includeCrashlytics()) {
        initCrashlyticsPropertiesIfNeeded()
    }
}

def initCrashlyticsPropertiesIfNeeded() {
    def propertiesFile = file('fabric.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: crashlyticsdemoApisecret)
            entry(key: "apiKey", value: crashlyticsdemoApikey)
        }
    }
}
